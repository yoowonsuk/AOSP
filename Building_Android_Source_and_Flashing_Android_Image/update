Update: Building Instructions for Ubuntu 22.04 and Ubuntu 24.04 Users
Building AOSP for ASUS Tinkerboard2 on Ubuntu 22.04 or 24.04
Introduction
This document is created for the audience of the Udemy lecture Visual Embedded Android (AOSP) with Drawings and Practice.

Following instructions are only valid for Ubuntu 22.04 and Ubuntu 24.04 users.

Legacy Source Code refers to the original source code that the Udemy course "Visual Embedded Android" uses. Legacy Source code is accessible from this link: https://github.com/TinkerBoard2-Android/manifest.git

After the Visual Embedded Android course has been published, there have been updates to the source code. The manifests for AOSP are now accessible from a different repository.

Newer source code refers to this repository: https://github.com/TinkerBoard-Android/rockchip-android-manifest.git

Instructions for building both legacy and newer source code on newer Ubuntu distributions such as Ubuntu 22.04 and Ubuntu 24.04 are given below.



Option 1: Building Newer Source Code on Ubuntu 22.04 and 24.04
export GITNAME="Your Name"
export GITEMAIL="your@email.com"
 
git config --global user.name $GITNAME
git config --global user.email $GITEMAIL
 
sudo apt-get update
sudo apt-get install -y \
build-essential \
checkinstall \
curl \
wget \
git \
git-core \
bc \
python3 \
gawk \
gnupg \
flex \
bison \
zip \
curl \
zlib1g-dev \
gcc-multilib \
g++-multilib \
libc6-dev-i386 \
x11proto-core-dev \
libx11-dev \
lib32z1-dev \
libgl1-mesa-dev \
libxml2-utils \
xsltproc \
unzip \
fontconfig \
libreadline-dev \
libncursesw5-dev \
libssl-dev \
libsqlite3-dev \
tk-dev \
libgdbm-dev \
libc6-dev \
libbz2-dev \
silversearcher-ag \
cpio \
lz4
python-is-python3 \
 
mkdir tinkerboard2-build
cd tinkerboard2-build
 
repo init -u https://github.com/TinkerBoard-Android/rockchip-android-manifest.git -b android11-rockchip -m tinker_board_2-android11-2.0.8.xml
 
repo sync -j4
 
sed -i '/struct device_node \*node = dev->of_node;/d' kernel/drivers/media/i2c/cam_sensor/cam_imx219.c
 
source build/envsetup.sh
lunch WW_Tinker_Board_2-userdebug
./build.sh -UKAu -J 4


Option 2: Building Legacy Source Code on Ubuntu 22.04 and 24.04
In order to build legacy source code (source code that is used within the lectures) on newer distributions, we need docker support. The reason why is we need to have the software package versions installed according to whatâ€™s needed in this legacy source code.

Use following commands to install docker on your Ubuntu PC and pull common Ubuntu images:

sudo apt-get install docker
sudo docker pull ubuntu:20.04
sudo docker pull ubuntu:22.04
sudo docker pull ubuntu:24.04


Secondly, create a folder called TinkerBoard2-Legacy-Docker wherever you please and create a file called Dockerfile inside with the following content:

# Use the official Ubuntu 20.04 base image
FROM ubuntu:20.04
 
# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
 
# Update and install necessary packages
RUN apt-get update && apt-get install -y \
build-essential \
checkinstall \
curl \
wget \
git \
git-core \
bc \
python3 \
python \
gawk \
gnupg \
flex \
bison \
zip \
curl \
zlib1g-dev \
gcc-multilib \
g++-multilib \
libc6-dev-i386 \
lib32ncurses5-dev \
x11proto-core-dev \
libx11-dev \
lib32z1-dev \
libgl1-mesa-dev \
libxml2-utils \
xsltproc \
unzip \
fontconfig \
libreadline-gplv2-dev \
libncursesw5-dev \
libncurses5 \
libssl-dev \
libsqlite3-dev \
tk-dev \
libgdbm-dev \
libc6-dev \
libbz2-dev \
silversearcher-ag \
cpio \
lz4 \
nano \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*
 
RUN curl https://storage.googleapis.com/git-repo-downloads/repo > /bin/repo
RUN chmod +x /bin/repo


In order to create and run Docker image, use following instructions:

cd TinkerBoard2-Legacy-Docker/
sudo docker build -t tinkerboard2-legacy .
sudo docker run -it tinkerboard2-legacy


Inside the docker image, we can now build AOSP as follows:

export GITNAME="Your Name"
export GITEMAIL="your@email.com"
 
git config --global user.name $GITNAME
git config --global user.email $GITEMAIL
 
mkdir tinkerboard2-build
cd tinkerboard2-build
echo "N" | repo init -u https://github.com/TinkerBoard2-Android/manifest.git -b android11-rk3399 -m tinker_board_2-android11-2.0.8.xml
repo sync -j4
 
sed -i '/struct device_node \*node = dev->of_node;/d' kernel/drivers/media/i2c/cam_sensor/cam_imx219.c
 
source build/envsetup.sh
lunch WW_Tinker_Board_2-userdebug
./build.sh -UKAu -J 4
